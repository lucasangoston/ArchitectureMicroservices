openapi: 3.0.0
info:
  description: The Travel Contract Application System
  title: Travel Contract
  version: 1.0.0
servers:
- url: https://api.esgi.fr/refcontract/v1
paths:
  /contracts:
    get:
      description: Multi-criteria search for contracts. The result is a list (maybe
        empty) of contracts
      operationId: searchContracts
      parameters:
      - description: External identifier of the subscriber
        example: CUSTOMER NUMBER
        explode: true
        in: query
        name: subscriberRef
        required: false
        schema:
          type: string
        style: form
      - description: Contract Status
        example: ACTIVE
        explode: true
        in: query
        name: contractStatus
        required: false
        schema:
          type: string
        style: form
      - description: Limits the number of items on a page
        example: 10
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: integer
        style: form
      - description: Specifies the page number of the list to be displayed
        example: 1
        explode: true
        in: query
        name: offset
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                ContractssResponse:
                  $ref: '#/components/examples/ContractsResponse'
              schema:
                $ref: '#/components/schemas/ContractsResponse'
          description: SUCCESS - Returns a list of Contracts
        "401":
          content:
            application/json:
              examples:
                ContractsResponse:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: ERROR - Not authenticated
        "403":
          content:
            application/json:
              examples:
                ContractsResponse:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: ERROR - Access token does not have the required scope
        "500":
          content:
            application/json:
              examples:
                ContractsResponse:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: ERROR - Internal Server error
      security:
      - OAuth2:
        - read
      - ApiKey: []
      summary: Search Contracts
      tags:
      - Search/Read
      x-accepts: application/json
    post:
      description: Add a new Contract
      operationId: postContract
      requestBody:
        content:
          application/json:
            examples:
              ContractResponse:
                $ref: '#/components/examples/ContractRequest'
            schema:
              $ref: '#/components/schemas/ContractRequest'
      responses:
        "201":
          content:
            application/json:
              examples:
                ContractResponse:
                  $ref: '#/components/examples/ContractResponse'
              schema:
                $ref: '#/components/schemas/ContractResponse'
          description: SUCCESS - Contract created
        "400":
          content:
            application/json:
              examples:
                ContractsResponse:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: ERROR - Invalid object request
        "401":
          content:
            application/json:
              examples:
                ContractsResponse:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: ERROR - Not authenticated
        "403":
          content:
            application/json:
              examples:
                ContractsResponse:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: ERROR - Access token does not have the required scope
        "500":
          content:
            application/json:
              examples:
                ContractsResponse:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: ERROR - Internal Server error
      security:
      - OAuth2:
        - write
      - ApiKey: []
      summary: Add a Contract
      tags:
      - Create/Lifecycle
      x-contentType: application/json
      x-accepts: application/json
  /contracts/{contractRef}:
    get:
      description: Get an existing Contract
      operationId: getContract
      parameters:
      - description: External identifier of the contract
        example: CTR-671675563
        explode: false
        in: path
        name: contractRef
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                ContractResponse:
                  $ref: '#/components/examples/ContractResponse'
              schema:
                $ref: '#/components/schemas/ContractResponse'
          description: OK
        "401":
          content:
            application/json:
              examples:
                ContractsResponse:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: ERROR - Not authenticated
        "403":
          content:
            application/json:
              examples:
                ContractsResponse:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: ERROR - Access token does not have the required scope
        "500":
          content:
            application/json:
              examples:
                ContractsResponse:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: ERROR - Internal Server error
      security:
      - OAuth2:
        - write
      - ApiKey: []
      summary: Read a Contract
      tags:
      - Search/Read
      x-accepts: application/json
    patch:
      description: Update an existing Contract
      operationId: patchContract
      parameters:
      - description: External identifier of the contract
        example: CTR-671675563
        explode: false
        in: path
        name: contractRef
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            examples:
              ContractRequest:
                $ref: '#/components/examples/ContractActionRequest'
            schema:
              $ref: '#/components/schemas/ContractActionRequest'
      responses:
        "204":
          description: NO_CONTENT
        "400":
          content:
            application/json:
              examples:
                ContractsResponse:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: ERROR - Invalid object request
        "401":
          content:
            application/json:
              examples:
                ContractsResponse:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: ERROR - Not authenticated
        "403":
          content:
            application/json:
              examples:
                ContractsResponse:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: ERROR - Access token does not have the required scope
        "500":
          content:
            application/json:
              examples:
                ContractsResponse:
                  $ref: '#/components/examples/ErrorResponse'
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: ERROR - Internal Server error
      security:
      - OAuth2:
        - write
      - ApiKey: []
      summary: Patch a Contract
      tags:
      - Create/Lifecycle
      x-contentType: application/json
      x-accepts: application/json
components:
  examples:
    ErrorResponse:
      value:
        errors:
        - path: /currentPath
          timestamp: 2022-04-28-16T22:14:45.624+0000
          errorCode: PD-123
          status: 400|401|403|500
          message: Error message
    QueryMetadataResponse:
      value:
        query: /contracts?customerRef=CUSTOMER&status=ACTIVE
        countItems: 1
        totalItems: 1
        totalPages: 1
    ContractActionRequest:
      value:
        action: activation
        contractRef: CTR-JHKJQGFSHFHGS
    ContractRequest:
      value:
        productRef: DEFERRED_BILLING
        contractType: DEFERRED_BILLING
        createdAt: 2022-04-22
        signedAt: 2022-04-22
        activatedAt: 2022-04-24
        expireAt: 2023-04-01
        status: ACTIVE
        distributor:
          distributorRef: esgi SA
        subscriber:
          subscriberRef: MA PETITE ENTREPRISE
          subscriberType: PROFESSIONNAL
          party:
            customerId: PRO-8996786873
            customerRef: CUSTOMER NUMBER
          contactPerson:
            gender: M
            firstName: John
            lastName: DOE
            mail: john.doe@acme.com
            phone: +33 (0)7 76 77 00 00
        custom:
          deferredBilling:
            creditLimit: 3000
            payment:
              paymentMethodType: WIRETRANSFER
              wireTansfert:
                rum: RUM08918098739762ABCGDF65524255658
    ContractResponse:
      value:
        contractId: "786876725453"
        contractRef: CTR-JHKJQGFSHFHGS
        productRef: DEFERRED_BILLING
        contractType: DEFERRED_BILLING
        createdAt: 2022-04-22
        signedAt: 2022-04-22
        activatedAt: 2022-04-24
        expireAt: 2023-04-01
        status: ACTIVE
        distributor:
          distributorRef: esgi SA
        subscriber:
          subscriberRef: MA PETITE ENTREPRISE
          subscriberType: PROFESSIONNAL
          party:
            customerId: PRO-8996786873
            customerRef: CUSTOMER NUMBER
          contactPerson:
            ccuid: CCU-123
            gender: M
            firstName: John
            lastName: DOE
            mail: john.doe@acme.com
            phone: +33 (0)7 76 77 00 00
        custom:
          deferredBilling:
            creditLimit: 3000
            payment:
              paymentMethodType: WIRETRANSFER
              wireTansfert:
                rum: RUM08918098739762ABCGDF65524255658
    ContractsResponse:
      value:
        contracts:
        - contractId: "786876725453"
          contractRef: CTR-JHKJQGFSHFHGS
          contractType: DEFERRED_BILLING
          createdAt: 2022-04-22
          activatedAt: 2022-04-24
          expireAt: 2023-04-01
          status: ACTIVE
          distributor:
            distributorRef: esgi SA
          subscriber:
            subscriberRef: MA PETITE ENTREPRISE
            subscriberType: PROFESSIONNAL
            customerRef: CUSTOMER NUMBER
            contactPerson:
              ccuid: CCU-123
              gender: M
              firstName: John
              lastName: DOE
              mail: john.doe@acme.com
              phone: +33 (0)7 76 77 00 00
          custom:
            deferredBilling:
              creditLimit: 3000
              payment:
                paymentMethodType: WIRETRANSFER
                wireTansfert:
                  rum: RUM08918098739762ABCGDF65524255658
        metadata:
          query: /contracts?customerRef=CUSTOMER&status=ACTIVE
          countItems: 1
          totalItems: 1
          totalPages: 1
  parameters:
    PathContractRef:
      description: External identifier of the contract
      example: CTR-671675563
      explode: false
      in: path
      name: contractRef
      required: true
      schema:
        type: string
      style: simple
    PathCustomerRef:
      description: External reference of the subscriber
      example: CUSTOMER NUMBER
      explode: false
      in: path
      name: customerRef
      required: true
      schema:
        type: string
      style: simple
    QueryContractStatus:
      description: Contract Status
      example: ACTIVE
      explode: true
      in: query
      name: contractStatus
      required: false
      schema:
        type: string
      style: form
    QueryContractRef:
      description: External identifier of the deferred billing contract for the customer
      example: CTR-671675563
      explode: true
      in: query
      name: contractRef
      required: false
      schema:
        type: string
      style: form
    QuerySubscriberRef:
      description: External identifier of the subscriber
      example: CUSTOMER NUMBER
      explode: true
      in: query
      name: subscriberRef
      required: false
      schema:
        type: string
      style: form
    QueryContactRef:
      description: IDExternal identifier of the Customer's contact
      example: CTR-671675563
      explode: true
      in: query
      name: contactRef
      required: false
      schema:
        type: string
      style: form
    QueryPageLimit:
      description: Limits the number of items on a page
      example: 10
      explode: true
      in: query
      name: limit
      required: false
      schema:
        type: integer
      style: form
    QueryPageOffset:
      description: Specifies the page number of the list to be displayed
      example: 1
      explode: true
      in: query
      name: offset
      required: false
      schema:
        type: integer
      style: form
  schemas:
    ErrorType:
      properties:
        path:
          type: string
        timestamp:
          type: integer
        errorCode:
          type: string
        status:
          type: integer
        message:
          type: string
        detail:
          type: string
      required:
      - errorCode
      - path
      - status
      - timestamp
      type: object
    ErrorResponse:
      properties:
        errors:
          items:
            $ref: '#/components/schemas/ErrorType'
          type: array
      type: object
    BusinessAddress:
      description: |
        A postal address splitted in 6 lines ordered as defined in RNVP and french standard AFNOR NF Z 10-011
        ([more information about the standards](http://www.rnvp-internationale.com/norme-postale/NF-Z-10-011.php)).
        All the lines are mandatory. Lines that are optional may be empty.
      properties:
        line1:
          description: |
            Particular: CIVILITÉ - TITRE ou QUALITÉ - PRÉNOM - NOM
            Progessionnal: RAISON SOCIALE ou DÉNOMINATION
          example: ESGI SA
          type: string
        line2:
          description: |
            Particular: N°APP ou BAL - ÉTAGE - COULOIR - ESC
            Professionnal: IDENTITÉ DU DESTINATAIRE et ou SERVICE
          example: Service comptabilité
          type: string
        line3:
          description: ENTRÉE - BÂTIMENT - IMMEUBLE - RÉS - ZI
          type: string
        line4:
          description: NUMÉRO - LIBELLÉ DE LA VOIE
          type: string
        line5:
          description: LIEU DIT ou SERVICE PARTICULIER DE DISTRIBUTION
          type: string
        locality:
          description: Name of the locality of the address
          type: string
        countryCode:
          description: Country code as defined in standard ISO 3166 ([more information
            about the standard](https://www.iso.org/fr/iso-3166-country-codes.html))
          type: string
        countryName:
          description: Country name as defined in standard ISO 3166 ([more information
            about the standard](https://www.iso.org/fr/iso-3166-country-codes.html))
          type: string
      type: object
    BusinessPerson:
      properties:
        ccuid:
          description: CCUID
          example: CCU-123
          type: string
        gender:
          description: Gender of the contact
          enum:
          - M
          - MME
          example: M
          type: string
        firstName:
          description: First name of the contact
          example: John
          type: string
        lastName:
          description: Last name of the contact
          example: DOE
          type: string
        mail:
          description: Mail address of the contact
          example: john.doe@acme.com
          format: email
          type: string
        phone:
          description: Phone number of the contact
          example: +33 (0)1 56 87 65 78
          format: phone
          type: string
      required:
      - ccuid
      - lastName
      - mail
      type: object
    WireTransfertResource:
      description: SEPA Informations
      properties:
        rum:
          description: Référence Unique de Mandat
          example: RUM08918098739762ABCGDF65524255658
          type: string
      type: object
    DeferredBilling:
      description: Describe billing contract
      properties:
        creditLimit:
          example: 3000
          type: integer
        payment:
          $ref: '#/components/schemas/BusinessPayment'
      type: object
    BusinessDistributor:
      description: Describes distributor organisation & contact
      properties:
        disributorRef:
          description: External reference of distributor
          example: esgi SA
          type: string
        eFacturation:
          $ref: '#/components/schemas/BusinessDistributor_eFacturation'
        contactPerson:
          $ref: '#/components/schemas/BusinessPerson'
        contactAddress:
          $ref: '#/components/schemas/BusinessAddress'
      type: object
    BusinessProfessionnalParty:
      description: Describes professionnal organisation
      properties:
        professionnal:
          $ref: '#/components/schemas/BusinessProfessionnalParty_professionnal'
      type: object
    BusinessParticularParty:
      description: Describes particular physical person
      properties:
        particular:
          $ref: '#/components/schemas/BusinessParticularParty_particular'
      type: object
    ContractActionRequest:
      description: Describe contract action
      example:
        action: activation
        contractRef: contractRef
      properties:
        action:
          example: activation
          type: string
        contractRef:
          type: string
      type: object
    BusinessSubscriber:
      description: Describes subscriber organisation & contact
      properties:
        subscriberRef:
          description: 'External reference of subscriber (By example: social reason
            of the company)'
          example: Ma Petite Entreprise
          type: string
        subscriberType:
          enum:
          - PARTICULAR
          - PROFESSIONNAL
          example: PROFESSIONNAL
          type: string
        party:
          $ref: '#/components/schemas/BusinessProfessionnalParty'
        eInvoicing:
          $ref: '#/components/schemas/BusinessSubscriber_eInvoicing'
        contactPerson:
          allOf:
          - $ref: '#/components/schemas/BusinessPerson'
          - properties:
              contactId:
                description: Internal contact identifier (legal represenative of entity)
                example: CCU-001524
                type: string
            required:
            - contactId
            type: object
          type: object
        contactAddress:
          $ref: '#/components/schemas/BusinessAddress'
        billingAddress:
          $ref: '#/components/schemas/BusinessAddress'
      required:
      - billingAddress
      - contactAddress
      - contactPerson
      - subscriberType
      type: object
    BusinessPayment:
      description: Describes the payment method used
      properties:
        paymentMethodType:
          description: Payment method type (Only WIRETRANSFER for differed billing
            phase 1)
          enum:
          - WIRETRANSFER
          example: WIRETRANSFER
          type: string
        wireTansfert:
          $ref: '#/components/schemas/WireTransfertResource'
      required:
      - paymentMethodType
      type: object
    ContractRequest:
      description: Describes contract
      example:
        ContractResponse:
          $ref: '#/components/examples/ContractResponse'
      properties:
        productRef:
          description: External reference of the product
          enum:
          - DEFERRED_BILLING
          example: DEFERRED_BILLING
          type: string
        contractType:
          description: Type of contract
          enum:
          - DEFERRED_BILLING
          example: DEFERRED_BILLING
          type: string
        createdAt:
          description: Creation date of contract (use ISO 8601 format YYYY-MM-DD)
          example: 2022-04-22
          format: date
          type: string
        signedAt:
          description: Signed date of contract (use ISO 8601 format YYYY-MM-DD)
          example: 2022-04-22
          format: date
          type: string
        activatedAt:
          description: Activation date of contract (use ISO 8601 format YYYY-MM-DD)
          example: 2022-04-24
          format: date
          type: string
        expireAt:
          description: Expiration date of contract (use ISO 8601 format YYYY-MM-DD)
          example: 2023-04-01
          format: date
          type: string
        status:
          description: Status of contact
          enum:
          - CREATED
          - ACTIVE
          - SUSPENDED
          - EXPIRED
          example: ACTIVE
          type: string
        distributor:
          $ref: '#/components/schemas/BusinessDistributor'
        subscriber:
          $ref: '#/components/schemas/BusinessSubscriber'
        custom:
          $ref: '#/components/schemas/DeferredBilling'
      required:
      - activatedAt
      - billing
      - contractType
      - createdAt
      - distributor
      - expireAt
      - payment
      - status
      - subscriber
      type: object
    ContractResponse:
      allOf:
      - $ref: '#/components/schemas/ContractResponse_allOf'
      - $ref: '#/components/schemas/ContractRequest'
      example:
        ContractRequest:
          $ref: '#/components/examples/ContractRequest'
      required:
      - contractId
      - contractRef
    ContractsResponse:
      description: List of contracts that meet the search criteria
      example:
        ContractsResponse:
          $ref: '#/components/examples/ContractsResponse'
      properties:
        contracts:
          items:
            $ref: '#/components/schemas/ContractResponse'
          type: array
        metadata:
          $ref: '#/components/schemas/QueryMetadataResponse'
    QueryMetadataResponse:
      description: Informations on current query & count of items and pages
      properties:
        query:
          description: URI of current query
          type: string
        countItems:
          description: Number of items in current response
          type: integer
        totalItems:
          description: Total number of items for current query
          type: integer
        totalPages:
          description: Total number of pages for current query
          type: integer
      type: object
    BusinessDistributor_eFacturation:
      description: Necessary for e-Invoicing & e-Reporting
      properties:
        siren:
          example: "356000000"
          type: string
        tvaIntracommunautaire:
          example: FR39356000000
          type: string
        country:
          example: FRANCE
          type: string
      type: object
    BusinessProfessionnalParty_professionnal:
      description: Desribes professionnal party
      properties:
        customerId:
          description: Internal Identifier of organisation
          example: PRO-8996786873
          type: string
        customerRef:
          description: External identifier of organisation (i.e. CUSTOMER)
          example: CUSTOMER NUMBER
          type: string
      type: object
    BusinessParticularParty_particular:
      properties:
        customerId:
          description: Internal Identifier of person
          example: PRO-8996786873
          type: string
        customerRef:
          description: External identifier of organisation (i.e. firstName + lastName)
          example: John DOE
          type: string
      type: object
    BusinessSubscriber_eInvoicing:
      description: Necessary for e-Invoicing & e-Reporting
      properties:
        siren:
          example: "784671695"
          type: string
        tvaIntracommunautaire:
          example: FR53157896342
          type: string
        country:
          example: FRANCE
          type: string
      type: object
    ContractResponse_allOf:
      properties:
        contractId:
          description: Internal identifier of the contract
          example: 58761542
          type: integer
        contractRef:
          description: External identifier of the contract
          example: SUB-YTYE65687
          type: string
      type: object
  securitySchemes:
    ApiKey:
      in: header
      name: X-OKAPI-KEY
      type: apiKey
    OAuth2:
      flows:
        authorizationCode:
          authorizationUrl: https://moncompte.esgi.fr/oauth/authorize
          scopes:
            read: Grants read access
            write: Grants write access
            admin: Grants access to admin operations
          tokenUrl: https://moncompte/esgi.fr/oauth/token
      type: oauth2

