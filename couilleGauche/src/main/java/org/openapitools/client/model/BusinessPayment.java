/*
 * Travel Contract
 * The Travel Contract Application System
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.openapitools.client.model.WireTransfertResource;

/**
 * Describes the payment method used
 */
@ApiModel(description = "Describes the payment method used")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-07-16T16:19:57.320415+02:00[Europe/Paris]")
public class BusinessPayment {
  /**
   * Payment method type (Only WIRETRANSFER for differed billing phase 1)
   */
  @JsonAdapter(PaymentMethodTypeEnum.Adapter.class)
  public enum PaymentMethodTypeEnum {
    WIRETRANSFER("WIRETRANSFER");

    private String value;

    PaymentMethodTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PaymentMethodTypeEnum fromValue(String value) {
      for (PaymentMethodTypeEnum b : PaymentMethodTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<PaymentMethodTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PaymentMethodTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PaymentMethodTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return PaymentMethodTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_PAYMENT_METHOD_TYPE = "paymentMethodType";
  @SerializedName(SERIALIZED_NAME_PAYMENT_METHOD_TYPE)
  private PaymentMethodTypeEnum paymentMethodType;

  public static final String SERIALIZED_NAME_WIRE_TANSFERT = "wireTansfert";
  @SerializedName(SERIALIZED_NAME_WIRE_TANSFERT)
  private WireTransfertResource wireTansfert;


  public BusinessPayment paymentMethodType(PaymentMethodTypeEnum paymentMethodType) {
    
    this.paymentMethodType = paymentMethodType;
    return this;
  }

   /**
   * Payment method type (Only WIRETRANSFER for differed billing phase 1)
   * @return paymentMethodType
  **/
  @ApiModelProperty(example = "WIRETRANSFER", required = true, value = "Payment method type (Only WIRETRANSFER for differed billing phase 1)")

  public PaymentMethodTypeEnum getPaymentMethodType() {
    return paymentMethodType;
  }


  public void setPaymentMethodType(PaymentMethodTypeEnum paymentMethodType) {
    this.paymentMethodType = paymentMethodType;
  }


  public BusinessPayment wireTansfert(WireTransfertResource wireTansfert) {
    
    this.wireTansfert = wireTansfert;
    return this;
  }

   /**
   * Get wireTansfert
   * @return wireTansfert
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public WireTransfertResource getWireTansfert() {
    return wireTansfert;
  }


  public void setWireTansfert(WireTransfertResource wireTansfert) {
    this.wireTansfert = wireTansfert;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BusinessPayment businessPayment = (BusinessPayment) o;
    return Objects.equals(this.paymentMethodType, businessPayment.paymentMethodType) &&
        Objects.equals(this.wireTansfert, businessPayment.wireTansfert);
  }

  @Override
  public int hashCode() {
    return Objects.hash(paymentMethodType, wireTansfert);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BusinessPayment {\n");
    sb.append("    paymentMethodType: ").append(toIndentedString(paymentMethodType)).append("\n");
    sb.append("    wireTansfert: ").append(toIndentedString(wireTansfert)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

